import telebot
from config import TOKEN
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardButton
import requests

bot = telebot.TeleBot(TOKEN)
token_ipad = 'http://127.0.0.1:8000/ipadipad'
btn = {
    'btn1': KeyboardButton(text="–ê–π–ø–∞–¥üì≤"),
    'btn4': KeyboardButton(text="–ê–π—Ñ–æ–Ωüì≤"),
    'btn2': KeyboardButton(text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö"),
    'btn3': KeyboardButton(text="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö"),
    'btn5': KeyboardButton(text="–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö"),

}
ipads = {
    'ID': 0,
    'title': None,
    'price': 0,
}
ipad = {
    'ID': 0,
}
ipad_title = {
    'title': None,
}

ipad_price = {
    'price': 0,
}
btn_inline = {
    "btn_inl_1": KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–π–ø–∞–¥–∞', ),
    "btn_inl_2": KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –∞–π–ø–∞–¥–∞', ),
}


@bot.message_handler(commands=['start'])
def start(message):
    a = ReplyKeyboardMarkup(resize_keyboard=True)
    a.add(btn['btn2'], btn['btn3'], btn['btn5'])
    next = bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç', reply_markup=a)
    bot.register_next_step_handler(next, path)


@bot.message_handler(content_types=['text'])
def path(message):
    if message.text == '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö':
        next = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ ID –ö–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å',
                                reply_markup=ReplyKeyboardRemove())
        bot.register_next_step_handler(next, pathid)
    if message.text == '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö':
        a = ReplyKeyboardMarkup(resize_keyboard=True)
        a.add(btn['btn1'], btn['btn4'])
        next = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å', reply_markup=a)
        bot.register_next_step_handler(next, sect_info_ipad_id)

    if message.text == '–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö':
        info = requests.get(token_ipad).json()
        kb = InlineKeyboardMarkup()
        for i in info:
            a = InlineKeyboardButton(text=f'{i["title"]}',  callback_data=i['ID'])
            kb.add(a)


        bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ?', reply_markup=kb)


def sect_info_ipad_id(message):
    if message.text == '–ê–π–ø–∞–¥üì≤':
        next = bot.send_message(message.chat.id, '–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∞–π–¥–∏ –¥–ª—è –∞–π–ø–∞–¥–∞', reply_markup=ReplyKeyboardRemove())
        bot.register_next_step_handler(next, sect_info_ipad_title)


def sect_info_ipad_title(message):
    ipads['ID'] = message.text
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ')
    next = bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∞–π–ø–∞–¥–∞', )
    bot.register_next_step_handler(next, sect_info_ipad_price)


def sect_info_ipad_price(message):
    ipads['title'] = message.text
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ')
    next = bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –¶–µ–Ω—É –¥–ª—è –∞–π–ø–∞–¥–∞', )
    bot.register_next_step_handler(next, sect_info_ipad_end)


def sect_info_ipad_end(message):
    ipads['price'] = message.text
    requests.post(token_ipad, json=ipads)
    bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æüëç', )


def pathid(message):
    ipad['ID'] = message.text
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ')
    a = ReplyKeyboardMarkup(resize_keyboard=True)
    a.add(btn_inline['btn_inl_1'], btn_inline['btn_inl_2'], )
    next = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å', reply_markup=a)
    bot.register_next_step_handler(next, info)


def info(message):
    if message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–π–ø–∞–¥–∞':
        next = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–π–ø–∞–¥–∞', reply_markup=ReplyKeyboardRemove())
        bot.register_next_step_handler(next, info_ipad)

    if message.text == '–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –∞–π–ø–∞–¥–∞':
        next = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∞–π–ø–∞–¥–∞', reply_markup=ReplyKeyboardRemove())
        bot.register_next_step_handler(next, info_price)


def info_ipad(message):
    ipad_title['title'] = message.text
    requests.patch(f'http://127.0.0.1:8000/ipadipad/{ipad["ID"]}/', json=ipad_title)
    a = ReplyKeyboardMarkup(resize_keyboard=True)
    a.add(btn['btn1'])
    next = bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω\n'
                                             '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å', reply_markup=a)
    bot.register_next_step_handler(next, path)


def info_price(message):
    ipad_price['price'] = message.text
    requests.patch(f'http://127.0.0.1:8000/ipadipad/{ipad["ID"]}/', json=ipad_price)
    a = ReplyKeyboardMarkup(resize_keyboard=True)
    a.add(btn['btn1'])
    next = bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω\n'
                                             '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å', reply_markup=a)
    bot.register_next_step_handler(next, path)



@bot.callback_query_handler(func=lambda call: True)
def call(call):
    req = call.data.split('_')[0]
    dss = requests.get(f'http://127.0.0.1:8000/ipadipad').json()
    print(dss)




bot.polling()
